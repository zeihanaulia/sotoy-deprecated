<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>belajar on Sotoy</title><link>https://sotoy.github.io/categories/belajar.html</link><description>Recent content in belajar on Sotoy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 05 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://sotoy.github.io/categories/belajar/index.xml" rel="self" type="application/rss+xml"/><item><title>Mencoba Rust System Programming Language</title><link>https://sotoy.github.io/posts/rust/mencoba-rust-system-programming-language.html</link><pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate><guid>https://sotoy.github.io/posts/rust/mencoba-rust-system-programming-language.html</guid><description>Sudah dari tahun 2018 kami sudah mendengar rust, terutama ketika AWS me-&amp;ldquo;Open Source&amp;rdquo; FireCraker - Engine Lambda, rust menjadi salah satu bahasa yang digadang-gadang saingan go. Ya meski tidak ada saingan diantara bahasa pemrograman, karena itu cuma alat bantu untuk menyelesaikan masalah. Baru ditahun ini ingin mencoba Rust, Karena ada kejenuhan dan ingin mencoba sesuatu yang baru.
Sekilas baca buku Programming Rust, 2nd Edition, bagian Why Rust?. Yang kami tangkap disana itu Rust adalah</description></item><item><title>Migrasi database dengan golang</title><link>https://sotoy.github.io/posts/golang/migrasi-database.html</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://sotoy.github.io/posts/golang/migrasi-database.html</guid><description>Akhir akhir ini terasa capek ketika membuat schema database langsung menggunakan GUI. Dan schema yang berubah bisa kadang kehilangan sejarahnya, kapan perubahannya tidak terawasi. Bagaimana jika skema database disatukan dengan source code aplikasi kita. Sehingga perkembangan skema database dapat tercatat sama seperti code.
Dengan tools bernama migrate menjadi solusi untuk permasalahan diatas. alih alih kita langsung membuat tabel diGUI database, kita bikin dalam script yang nantinya dimasukan kedalam database juga.</description></item><item><title>Install postgre pakai docker</title><link>https://sotoy.github.io/posts/docker/docker-postgres.html</link><pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate><guid>https://sotoy.github.io/posts/docker/docker-postgres.html</guid><description>Docker saat ini sudah menjadi normal yang baru dalam pengembangan perangkat lunak. Docker mempermudah kita sebagai pengembang dalam melakukan instalasi aplikasi. Teringat jaman dulu waktu awal-awal mengembangkan perangkat lunak, Harus menginstall sepertangkat pake aplikasi seperti XAMP atau LAMP untuk mempermudah instalasi.
Sekarang tidak perlu lagi, cukup menggunakan docker kita bisa menginstallnya.
Installing Postgre SQL Untuk mendapatkan docker images container cukup mudah dengan code.
docker pull postgres kode diatas akan mendownload postgre versi terakhir, kalau ingin versi yang spesifik bisa menggunakan code ini:</description></item><item><title>Memahami GraphQL Pagination</title><link>https://sotoy.github.io/posts/graphql/graphql-pagination.html</link><pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate><guid>https://sotoy.github.io/posts/graphql/graphql-pagination.html</guid><description>Implementasi pagination atau bahasa indonesianya pemberian halaman pada data cukup berbeda. Biasanya cuma bikin ?page=1&amp;amp;limit=10 dimana pada query databasenya menjadi OFFSET 0 LIMIT 1. Pada GraphQL ada beberapa cara untuk melakukan pagination.
Sumber Bacaan:
BEST PRACTICES - Pagination- Paginating results with GraphQL</description></item></channel></rss>